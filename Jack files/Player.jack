/*
* Handle Mario's position
*/
class Player {
   field int xPos;
   field int yPos;
   field int yVel;
   field int position;
   field int preposition;
   field int tick; // internal clock
   field boolean gravity; 
   field boolean animation_direction_up;

   constructor Player new(int x, int y) {
      let xPos = (x*16);
      let yPos = y;
      let yVel = 0;
      let position = (x+(32*yPos));
      let preposition = (x+(32*yPos));
      let tick = 0;
      let gravity = true;
      let animation_direction_up = false;
      return this;
   }

   method void dispose() {
      do Memory.deAlloc(this);
      return;
   }

   method void jump() {
      if((position-(xPos/16))<120){
         let yVel=15;
         return;
      }
      let yVel = -4;
      if (~gravity) {
         let gravity = true;
      }
      return;
   }

   method void tick() {
      // updates every couple ticks
      let tick = tick + 1;
      if (tick = 5) {
         let tick = 0;
         if (yVel < 6) {
            let yVel = yVel + 1;
         }
      }
      // apply position according to the gravity 
      if (gravity) {
         if (yVel > 0) {
            if (yPos < (221-yVel)) {
               let yPos = yPos + yVel;
               let position = position + (yVel*32);
            }
         } else {
            if (yPos > -yVel) {
               let yPos = yPos + yVel;
               let position = position + (yVel*32);
            } else {
               let yVel = 0;
            }
         }
      }  else {
         if (animation_direction_up) {
            if ((tick = 1)) {
               let yPos = yPos - 1;
               let position = position - 32;
            if (yPos < 118) {let animation_direction_up = false;}}
         } else {
            if ((tick = 1)) {
               let yPos = yPos + 1;
               let position = position + 32;
            if (yPos > 138) {let animation_direction_up = true;}}
         }
      }
      return;
   }

   method void render() {

      do Images.del_mario1(preposition);
      let preposition = position;
      do Images.draw_mario1(position);
      return;
   }

   method void update() {
      do tick();
      do render();
      return;
   }

   method int x() {
      return xPos;
   }

   method int y() {
      return yPos;
   }
}